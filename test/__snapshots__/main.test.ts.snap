// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Mappings": Object {
    "DefaultCrNodeVersionMap": Object {
      "af-south-1": Object {
        "value": "nodejs16.x",
      },
      "ap-east-1": Object {
        "value": "nodejs16.x",
      },
      "ap-northeast-1": Object {
        "value": "nodejs16.x",
      },
      "ap-northeast-2": Object {
        "value": "nodejs16.x",
      },
      "ap-northeast-3": Object {
        "value": "nodejs16.x",
      },
      "ap-south-1": Object {
        "value": "nodejs16.x",
      },
      "ap-south-2": Object {
        "value": "nodejs16.x",
      },
      "ap-southeast-1": Object {
        "value": "nodejs16.x",
      },
      "ap-southeast-2": Object {
        "value": "nodejs16.x",
      },
      "ap-southeast-3": Object {
        "value": "nodejs16.x",
      },
      "ca-central-1": Object {
        "value": "nodejs16.x",
      },
      "cn-north-1": Object {
        "value": "nodejs16.x",
      },
      "cn-northwest-1": Object {
        "value": "nodejs16.x",
      },
      "eu-central-1": Object {
        "value": "nodejs16.x",
      },
      "eu-central-2": Object {
        "value": "nodejs16.x",
      },
      "eu-north-1": Object {
        "value": "nodejs16.x",
      },
      "eu-south-1": Object {
        "value": "nodejs16.x",
      },
      "eu-south-2": Object {
        "value": "nodejs16.x",
      },
      "eu-west-1": Object {
        "value": "nodejs16.x",
      },
      "eu-west-2": Object {
        "value": "nodejs16.x",
      },
      "eu-west-3": Object {
        "value": "nodejs16.x",
      },
      "me-central-1": Object {
        "value": "nodejs16.x",
      },
      "me-south-1": Object {
        "value": "nodejs16.x",
      },
      "sa-east-1": Object {
        "value": "nodejs16.x",
      },
      "us-east-1": Object {
        "value": "nodejs16.x",
      },
      "us-east-2": Object {
        "value": "nodejs16.x",
      },
      "us-gov-east-1": Object {
        "value": "nodejs16.x",
      },
      "us-gov-west-1": Object {
        "value": "nodejs16.x",
      },
      "us-iso-east-1": Object {
        "value": "nodejs14.x",
      },
      "us-iso-west-1": Object {
        "value": "nodejs14.x",
      },
      "us-isob-east-1": Object {
        "value": "nodejs14.x",
      },
      "us-west-1": Object {
        "value": "nodejs16.x",
      },
      "us-west-2": Object {
        "value": "nodejs16.x",
      },
    },
  },
  "Outputs": Object {
    "apiUrl": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "infrastructureexampleAPI5A9FDF24",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "infrastructureexampleAPIDeploymentStageprod94E9F975",
            },
            "/",
          ],
        ],
      },
    },
    "distribution": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "SiteCloudfrontDistribution0794B6B8",
          "DomainName",
        ],
      },
    },
    "infrastructureexampleAPIEndpoint726E6897": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "infrastructureexampleAPI5A9FDF24",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "infrastructureexampleAPIDeploymentStageprod94E9F975",
            },
            "/",
          ],
        ],
      },
    },
    "siteBucket": Object {
      "Value": Object {
        "Ref": "SitewebsiteBucketBC20A569",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": Object {
      "DependsOn": Array [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "SiteDeployBucketAwsCliLayerB1A3335C",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SitewebsiteBucketBC20A569",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SitewebsiteBucketBC20A569",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": Array [
          Object {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "SitewebsiteBucketBC20A569",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SiteCloudfrontDistribution0794B6B8": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "DefaultCacheBehavior": Object {
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "TargetOriginId": "testSiteCloudfrontDistributionOrigin14F75D719",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": Object {
            "Bucket": Object {
              "Fn::GetAtt": Array [
                "SiteCloudfrontDistributionLoggingBucket0054AC66",
                "RegionalDomainName",
              ],
            },
          },
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "SitewebsiteBucketBC20A569",
                  "RegionalDomainName",
                ],
              },
              "Id": "testSiteCloudfrontDistributionOrigin14F75D719",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "SiteCloudfrontDistributionOrigin1S3Origin4F2AB6D1",
                      },
                    ],
                  ],
                },
              },
            },
          ],
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "SiteCloudfrontDistributionLoggingBucket0054AC66": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "SiteCloudfrontDistributionOrigin1S3Origin4F2AB6D1": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Identity for testSiteCloudfrontDistributionOrigin14F75D719",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "SiteDeployBucketAwsCliLayerB1A3335C": Object {
      "Properties": Object {
        "Content": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "10972873dd8a3bc33ae1cb91d834617be249fd84bed5bdbb6ffbb581650aea83.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "SiteDeployBucketCustomResource08EC962A": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucketName": Object {
          "Ref": "SitewebsiteBucketBC20A569",
        },
        "DistributionId": Object {
          "Ref": "SiteCloudfrontDistribution0794B6B8",
        },
        "DistributionPaths": Array [
          "/*",
        ],
        "Prune": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": Array [
          Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceMarkers": Array [
          Object {},
          Object {
            "<<marker:0xbaba:0>>": Object {
              "Ref": "infrastructureexampleAPI5A9FDF24",
            },
            "<<marker:0xbaba:1>>": Object {
              "Ref": "AWS::Region",
            },
            "<<marker:0xbaba:2>>": Object {
              "Ref": "AWS::URLSuffix",
            },
            "<<marker:0xbaba:3>>": Object {
              "Ref": "infrastructureexampleAPIDeploymentStageprod94E9F975",
            },
          },
        ],
        "SourceObjectKeys": Array [
          "8c02a29591a91b184cb6526fa956bfccef279471944550db049081731c178678.zip",
          "54db0af5da74dab89a93c249167c5b162223925d4c9385ff9262a09b67c99244.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "SitewebsiteBucketAutoDeleteObjectsCustomResourceB62EAF63": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "SitewebsiteBucketPolicyC20F0243",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "SitewebsiteBucketBC20A569",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "SitewebsiteBucketBC20A569": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "aws-cdk:cr-owned:7d2ce709",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "SitewebsiteBucketPolicyC20F0243": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "SitewebsiteBucketBC20A569",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SitewebsiteBucketBC20A569",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SitewebsiteBucketBC20A569",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "SiteCloudfrontDistributionOrigin1S3Origin4F2AB6D1",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "SitewebsiteBucketBC20A569",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "infrastructureexampleAPI5A9FDF24": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "REGIONAL",
          ],
        },
        "Name": "exampleAPI",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "infrastructureexampleAPIAccount4485ABD6": Object {
      "DeletionPolicy": "Retain",
      "DependsOn": Array [
        "infrastructureexampleAPI5A9FDF24",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "infrastructureexampleAPICloudWatchRoleD43E6C51",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "infrastructureexampleAPICloudWatchRoleD43E6C51": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "infrastructureexampleAPIDeployment35A3D778c2585619f83c2d31cff7824b55d01469": Object {
      "DependsOn": Array [
        "infrastructureexampleAPIexampleOPTIONSA419ECDC",
        "infrastructureexampleAPIexamplePOST45BFD7CC",
        "infrastructureexampleAPIexampleB3E09EA8",
        "infrastructureexampleAPIOPTIONSF9FCD477",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "infrastructureexampleAPI5A9FDF24",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "infrastructureexampleAPIDeploymentStageprod94E9F975": Object {
      "DependsOn": Array [
        "infrastructureexampleAPIAccount4485ABD6",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "infrastructureexampleAPIDeployment35A3D778c2585619f83c2d31cff7824b55d01469",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "infrastructureexampleAPI5A9FDF24",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "infrastructureexampleAPIOPTIONSF9FCD477": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "infrastructureexampleAPI5A9FDF24",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "infrastructureexampleAPI5A9FDF24",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "infrastructureexampleAPIexampleB3E09EA8": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "infrastructureexampleAPI5A9FDF24",
            "RootResourceId",
          ],
        },
        "PathPart": "example",
        "RestApiId": Object {
          "Ref": "infrastructureexampleAPI5A9FDF24",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "infrastructureexampleAPIexampleOPTIONSA419ECDC": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "infrastructureexampleAPIexampleB3E09EA8",
        },
        "RestApiId": Object {
          "Ref": "infrastructureexampleAPI5A9FDF24",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "infrastructureexampleAPIexamplePOST45BFD7CC": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "infrastructuremeetingLambda262F5C95",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "infrastructureexampleAPIexampleB3E09EA8",
        },
        "RestApiId": Object {
          "Ref": "infrastructureexampleAPI5A9FDF24",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "infrastructureexampleAPIexamplePOSTApiPermissionTesttestinfrastructureexampleAPI3B579AEBPOSTexampleCCB06F69": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "infrastructuremeetingLambda262F5C95",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "infrastructureexampleAPI5A9FDF24",
              },
              "/test-invoke-stage/POST/example",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "infrastructureexampleAPIexamplePOSTApiPermissiontestinfrastructureexampleAPI3B579AEBPOSTexampleFE69CE21": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "infrastructuremeetingLambda262F5C95",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "infrastructureexampleAPI5A9FDF24",
              },
              "/",
              Object {
                "Ref": "infrastructureexampleAPIDeploymentStageprod94E9F975",
              },
              "/POST/example",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "infrastructureexampleTable1846245E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "example",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "example",
            "KeyType": "HASH",
          },
        ],
        "TimeToLiveSpecification": Object {
          "AttributeName": "timeToLive",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "infrastructureinfrastructureRole7CDA6EE1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "infrastructureinfrastructureRoleDefaultPolicy8A8149BB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "infrastructureexampleTable1846245E",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "infrastructureinfrastructureRoleDefaultPolicy8A8149BB",
        "Roles": Array [
          Object {
            "Ref": "infrastructureinfrastructureRole7CDA6EE1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "infrastructuremeetingLambda262F5C95": Object {
      "DependsOn": Array [
        "infrastructureinfrastructureRoleDefaultPolicy8A8149BB",
        "infrastructureinfrastructureRole7CDA6EE1",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "dd0eb7eb3ef7f16ada7047ac283a7fde6b9af1f853e78b3411374ed41968257d.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "MEETINGS_TABLE": Object {
              "Ref": "infrastructureexampleTable1846245E",
            },
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "infrastructureinfrastructureRole7CDA6EE1",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
